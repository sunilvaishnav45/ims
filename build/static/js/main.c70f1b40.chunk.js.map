{"version":3,"sources":["logo.svg","Components/Sidebar.js","Components/Product.js","Components/Topbar.js","Components/Brand.js","Components/Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Sidebar","centerText","textAlign","color","borderRadius","class","style","width","to","href","Component","Product","padding","Button","variant","Topbar","Brand","Dashboard","App","className","paddingRight","paddingLeft","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+JAAAA,EAAOC,QAAU,IAA0B,kC,sLCmC5BC,G,MA/Bf,uKAEQ,IAGMC,EAAa,CACfC,UAAW,SACXC,MAAO,QACPC,aAAc,KAGlB,OACI,yBAAMC,MAAM,aAAaC,MAVb,CACZC,MAAO,SAUH,kBAAC,IAAD,CAAMC,GAAG,KACL,uBAAGF,MAAOL,EAAYI,MAAM,oBAA5B,cAEJ,kBAAC,IAAD,CAAMG,GAAG,YACL,uBAAGF,MAAOL,EAAYI,MAAM,oBAA5B,aAEJ,kBAAC,IAAD,CAAMG,GAAG,UACL,uBAAGF,MAAOL,EAAYI,MAAM,oBAA5B,UAEJ,uBAAGI,KAAK,IAAIH,MAAOL,EAAYI,MAAM,oBAArC,YACA,uBAAGI,KAAK,IAAIH,MAAOL,EAAYI,MAAM,oBAArC,UACA,uBAAGI,KAAK,IAAIH,MAAOL,EAAYI,MAAM,oBAArC,WACA,uBAAGI,KAAK,IAAIH,MAAOL,EAAYI,MAAM,oBAArC,eAzBhB,GAA6BK,c,QCUdC,EAXf,uKAEQ,OACI,yBAAKL,MAAO,CAACM,QAAS,KAClB,uCACA,kBAACC,EAAA,EAAD,CAAQC,QAAQ,mBAAhB,oBALhB,GAA6BJ,a,QCWdK,EAZf,uKAEQ,OACI,6BACI,yBAAKV,MAAM,8BACP,mCAAGI,KAAK,IAAIJ,MAAM,gBAAlB,OAAsC,KAAtC,qCALpB,GAA4BK,aCUbM,EAVf,uKAEQ,OACI,yBAAKV,MAAO,CAACM,QAAQ,KACjB,0CAJhB,GAA2BF,aCUZO,EAVf,uKAEQ,OACI,yBAAKX,MAAO,CAACM,QAAQ,KACjB,8CAJhB,GAA+BF,aCmChBQ,MA3Bf,WACE,OACE,6BACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MAIA,yBAAKC,UAAU,OACb,yBAAKA,UAAU,WAAWb,MAAO,CAACc,aAAa,EAAEC,YAAY,IAC3D,kBAAC,EAAD,OAEF,yBAAKF,UAAU,YAAYb,MAAO,CAACc,aAAa,EAAEC,YAAY,IAC5D,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWP,IACjC,kBAAC,IAAD,CAAOK,KAAK,WAAWC,OAAK,EAACC,UAAWb,IACxC,kBAAC,IAAD,CAAOW,KAAK,SAASC,OAAK,EAACC,UAAWR,WCflCS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.c70f1b40.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React,{Component} from 'react'\nimport './Sidebar.css';\nimport {Link} from 'react-router-dom'\n\nexport class Sidebar extends Component {\n    render() {\n        const sideBar = {\n            width: '100%'\n        }\n        const centerText = {\n            textAlign: 'center',\n            color: 'white',\n            borderRadius: '0'   \n        }\n\n        return (\n            <div  class=\"list-group\" style={sideBar}>\n                <Link to=\"/\">\n                    <a style={centerText} class=\"list-group-item \">Dashboard</a>\n                </Link>\n                <Link to=\"/product\">\n                    <a style={centerText} class=\"list-group-item \">Products</a>\n                </Link>\n                <Link to=\"/brand\">\n                    <a style={centerText} class=\"list-group-item \">Brand</a>\n                </Link>\n                <a href=\"#\" style={centerText} class=\"list-group-item \">Overview</a>\n                <a href=\"#\" style={centerText} class=\"list-group-item \">Events</a>\n                <a href=\"#\" style={centerText} class=\"list-group-item \">Profile</a>\n                <a href=\"#\" style={centerText} class=\"list-group-item \">Status</a>\n            </div>\n        )\n    }\n}\n\nexport default Sidebar\n","import React,{Component} from 'react'\nimport {Button} from 'react-bootstrap'\n\nexport class Product extends Component {\n    render() {\n        return (\n            <div style={{padding: 10}}>\n                <h4>Product</h4>\n                <Button variant=\"outline-success\">Add product</Button>\n            </div>\n        )\n    }\n}\n\nexport default Product\n","import React,{Component} from 'react'\n\nexport class Topbar extends Component {\n    render() {\n        return (\n            <div>\n                <nav class=\"navbar navbar-dark bg-dark\">\n                    <a href=\"#\" class=\"navbar-brand\" href=\"#\">Inventory Management System</a>\n                </nav>\n            </div>\n        )\n    }\n}\n\nexport default Topbar\n","import React,{Component} from 'react'\n\nexport class Brand extends Component {\n    render() {\n        return (\n            <div style={{padding:10}}>\n                <h4 >Brand</h4>\n            </div>\n        )\n    }\n}\n\nexport default Brand\n","import React, { Component } from 'react'\n\nexport class Dashboard extends Component {\n    render() {\n        return (\n            <div style={{padding:10}}>\n                <h4 >Dashboard</h4>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\nimport Sidebar from './Components/Sidebar';\nimport Product from './Components/Product';\nimport Topbar from './Components/Topbar';\nimport Brand from './Components/Brand';\nimport Dashboard from './Components/Dashboard';\n\nfunction App() {\n  return (\n    <div>\n      <Router>\n        <Topbar />\n        {/*  <Sidebar />\n      <Product /> */}\n        {/* <div className=\"container-fluid\"> */}\n        <div className=\"row\">\n          <div className=\"col-md-2\" style={{paddingRight:0,paddingLeft:0}}>\n            <Sidebar />\n          </div>\n          <div className=\"col-md-10\" style={{paddingRight:0,paddingLeft:0}}>\n            <div>\n              <Switch>\n                <Route path=\"/\" exact component={Dashboard} />\n                <Route path=\"/product\" exact component={Product} />\n                <Route path=\"/brand\" exact component={Brand} />\n              </Switch>\n            </div>\n          </div>\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}