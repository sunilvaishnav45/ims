{"version":3,"sources":["Components/Sidebar/Sidebar.js","Utils/UrlUtils.js","Components/Product/Product.js","Components/Topbar/Topbar.js","Services/RequestService.js","Services/BrandService.js","Components/Brand/BrandModal.jsx","Components/Brand/BrandList.jsx","Components/Brand/Brand.jsx","Components/Dashboard/Dashboard.js","Services/LoginService.js","Router/PrivateRoute.js","Components/Login/Login.jsx","Router/PublicRoute.js","App.js","serviceWorker.js","index.js"],"names":["Sidebar","React","Component","className","to","icon","faMeteor","faProjectDiagram","faDatabase","faEnvelopeOpenText","faUser","faDigitalTachograph","Product","useState","show","setShow","handleClose","name","status","product","setProduct","saveProduct","event","preventDefault","console","log","style","padding","Button","variant","onClick","Modal","onHide","Header","closeButton","Title","Body","Form","onSubmit","Group","controlId","Label","Control","type","placeholder","value","onChange","target","as","custom","Footer","Topbar","Fragment","href","RequestService","getRequest","url","axios","get","then","response","Promise","resolve","data","catch","error","reject","postRequest","object","post","deleteRequest","method","updateRequest","BrandService","findBrandById","ids","process","REACT_APP_API_PRODUCT_SERVICE","this","requestService","findAllBrand","saveBrand","deleteBrand","updateBrand","BrandModal","updatedBrand","brandService","setUpdatedBrand","id","brand","available","useEffect","BrandList","setBrand","brandFetched","isBrandFetched","deleteBrandToolTip","props","Tooltip","updateBrandToolTip","res","setTimeout","map","key","src","alt","OverlayTrigger","placement","delay","hide","overlay","faTrash","size","faEdit","color","height","width","Brand","faPlus","Dashboard","setState","REACT_APP_API_BASE_URL","LoginService","getLoginTokenKey","requestToLoginUser","userObj","onLoginSuccess","localStorage","setItem","isUserLoggedIn","getItem","loginService","PrivateRoute","component","rest","render","Login","email","setEmail","password","setPassword","loggedIn","window","location","msg","alert","FormGroup","bsSize","FormControl","autoFocus","e","block","disabled","length","PublicRoute","restricted","App","path","exact","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.372c8446.chunk.js","sourcesContent":["import React,{Component} from 'react'\nimport './Sidebar.css';\nimport {Link} from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faProjectDiagram,faUser, faDigitalTachograph, faEnvelopeOpenText,faMeteor,faDatabase} from '@fortawesome/free-solid-svg-icons';\nimport UrlUtils from '../../Utils/UrlUtils';\n\n\nexport class Sidebar extends Component {\n\n    constructor(){\n        super();\n    }\n    render() {\n        return (\n            <div  className=\"list-group w-100 h-100\">\n                <Link to=\"/?active=dashboard\">\n                    <div className=\"list-group-item\">\n                        <span className=\"mr-1\"><FontAwesomeIcon icon={faMeteor} /></span> Dashboard\n                    </div>\n                </Link>\n                <Link to=\"/product?active=product\">\n                    <div className=\"list-group-item\">\n                        <span className=\"mr-1\"><FontAwesomeIcon icon={faProjectDiagram} /></span> Product\n                    </div>\n                </Link>\n                <Link to=\"/brand?active=brand\">\n                    <div className=\"list-group-item\">\n                        <span className=\"mr-1\"><FontAwesomeIcon icon={faDatabase} /></span> Brand\n                    </div>\n                </Link>\n                <div className=\"list-group-item\">\n                    <span className=\"mr-1\"><FontAwesomeIcon icon={faDatabase} /></span> Overview\n                </div>\n                <div className=\"list-group-item\">\n                    <span className=\"mr-1\"><FontAwesomeIcon icon={faEnvelopeOpenText} /></span> Event\n                </div>\n                <div className=\"list-group-item\">\n                    <span className=\"mr-1\"><FontAwesomeIcon icon={faUser} /></span> Profile\n                </div>\n                <div className=\"list-group-item\">\n                    <span className=\"mr-1\"><FontAwesomeIcon icon={faDigitalTachograph} /></span> Status\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Sidebar\n","\nimport React from 'react';\n\nclass UrlUtils extends React.Component {\n\n    constructor() {\n        super();\n    }\n\n    getQueryParamValue = (queryParam) => {\n        let queryReturn = '';\n        if (queryParam) {\n            let url = window.location.href;\n            let queryString = url.split(\"?\")[1];\n            if (queryString) {\n                let queryStringList = queryString.split(\"&\");\n                queryStringList.forEach(query => {\n                    let queryKey = query.split(\"=\")[0]\n                    if (queryParam == queryKey) {\n                        queryReturn = query.split(\"=\")[1];\n                    }\n\n                })\n            }\n        }\n        return queryReturn;\n    }\n\n\n}\n\nexport default UrlUtils;","import React,{useState} from 'react'\nimport {Button,Modal,Form} from 'react-bootstrap'\n\nfunction Product() {\n    const [show,setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const [product,setProduct] = useState({name:'',status:'active'});\n    const handleName = (event) => setProduct({...product,name:event.target.value});\n    const handleStatus = (event) => setProduct({...product,status:event.target.value});\n    const saveProduct = (event) => {\n        event.preventDefault();\n        console.log('product',product);\n        handleClose();\n    }\n\n\n    return (\n        <div style={{padding: 10}}>\n            <h4>Product</h4>\n            <Button variant=\"outline-success\" onClick={handleShow}> Add product</Button>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Add Product</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={saveProduct}>\n                        <Form.Group controlId=\"formBasicEmail\" >\n                            <Form.Label>Product Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Name\" value={product.name} onChange={handleName} />\n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.SelectCustom\">\n                            <Form.Label>Status</Form.Label>\n                            <Form.Control as=\"select\" custom value={product.status} onChange={handleStatus}>\n                                <option value=\"active\">Active</option>\n                                <option value=\"inactive\">Inactive</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" type=\"submit\" onClick={saveProduct}>Save Changes</Button>\n                    <Button variant=\"secondary\" onClick={handleClose}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default Product\n\n","import React,{Component} from 'react'\n\nexport class Topbar extends Component {\n\n    constructor(){\n        super()\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <nav className=\"navbar navbar-dark  bg-dark\">\n                    <a className=\"navbar-brand\" href=\"/\">IMS</a>\n                </nav>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default Topbar\n","import axios from 'axios';\nimport React from 'react'\n\nclass RequestService extends React.Component {\n\n    constructor() {\n        super();\n    }\n\n    getRequest = function (url) {\n        return axios.get(url)\n            .then(response => { return Promise.resolve(response.data) })\n            .catch(error => { return Promise.reject(error) });\n    }\n\n    postRequest = function (url, object) {\n        return axios.post(url, object)\n            .then(response => {\n                return Promise.resolve(response.data);\n            })\n            .catch(error => {\n                return Promise.reject(error);\n            });\n    }\n\n    deleteRequest = function (url, object) {\n        return axios({\n            method: 'delete',\n            url: url,\n            data: object\n        })\n            .then(response => { return Promise.resolve(response.data) })\n            .catch(error => { return Promise.reject(error) });\n    }\n\n    updateRequest = function (url, object) {\n        return axios({\n            method: 'put',\n            url: url,\n            data: object\n        })\n            .then(response => { return Promise.resolve(response.data) })\n            .catch(error => { return Promise.reject(error) });\n    }\n}\n\nexport default RequestService;\n","import RequestService from './RequestService';\nimport React from 'react'\n\nclass BrandService extends React.Component {\n\n    constructor() {\n        super();\n        this.requestService = new RequestService();\n    }\n\n    findBrandById = function (ids) {\n        const url = process.env.REACT_APP_API_PRODUCT_SERVICE + \"brand/?brandIds=\" + ids;\n        this.requestService.getRequest(url)\n            .then(response => {return Promise.resolve(response);})\n            .catch(error => {return Promise.reject(error);});\n    }\n\n    findAllBrand = function () {\n        const url = process.env.REACT_APP_API_PRODUCT_SERVICE + \"brand/\";\n        return this.requestService.getRequest(url)\n            .then(response => {return Promise.resolve(response);})\n            .catch(error => {return Promise.reject(error);});\n    }\n\n    saveBrand = function (object) {\n        const url = process.env.REACT_APP_API_PRODUCT_SERVICE + \"brand/\";\n        this.requestService.postRequest(url,object)\n            .then(response => {return Promise.resolve(response);})\n            .catch(error => {return Promise.reject(error);});\n    }\n\n    deleteBrand = function (object) {\n        const url = process.env.REACT_APP_API_PRODUCT_SERVICE + \"brand/\";\n        this.requestService.deleteRequest(url,object)\n            .then(response => {return Promise.resolve(response);})\n            .catch(error => {return Promise.reject(error);});\n    }\n\n    updateBrand = function (object) {\n        const url = process.env.REACT_APP_API_PRODUCT_SERVICE + \"brand/\";\n        this.requestService.updateRequest(url,object)\n            .then(response => {return Promise.resolve(response);})\n            .catch(error => {return Promise.reject(error);});\n    }\n}\n\nexport default BrandService;","import React,{useState,useEffect} from 'react'\nimport {Button,Modal,Form} from 'react-bootstrap'\nimport BrandService from '../../Services/BrandService'\n\nfunction BrandModal({show,setShow,updatedBrand,setUpdatedBrand}) {\n\n    const brandService = new BrandService();\n\n    const handleClose = () => setShow(false);\n\n    const [product,setProduct] = useState({id: 0,brand: '',available: true});\n    const handleName = (event) => setProduct({...product,brand: event.target.value});\n    const handleStatus = (event) => setProduct({...product,available: event.target.value});\n\n\n    const saveProduct = (event) => {\n        event.preventDefault();\n        setProduct({...product,id: product.id + 1});\n        brandService.saveBrand(product);\n        handleClose();\n    }\n\n    useEffect(() => {\n        // setProduct(updatedBrand)\n        console.log(updatedBrand,'brand in modal');\n    },[])\n\n    return (\n        <div className=\"p-2\">\n            <Modal show={show}>\n                <Modal.Header closeButton onClick={() => setShow(false)}>\n                    <Modal.Title>Add Brand</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form onSubmit={saveProduct}>\n                        <Form.Group controlId=\"formBasicEmail\" >\n                            <Form.Label>Product Name</Form.Label>\n                            <Form.Control type=\"text\" placeholder=\"Add new brand.ex: Addidas\" value={product.brand} onChange={handleName} />\n                        </Form.Group>\n                        <Form.Group controlId=\"exampleForm.SelectCustom\">\n                            <Form.Label>Status</Form.Label>\n                            <Form.Control as=\"select\" custom value={product.available} onChange={handleStatus}>\n                                <option value=\"true\">Active</option>\n                                <option value=\"false\">Inactive</option>\n                            </Form.Control>\n                        </Form.Group>\n                    </Form>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" type=\"submit\" onClick={saveProduct}>Save Changes</Button>\n                    <Button variant=\"secondary\" onClick={() => setShow(false)}>Close</Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    )\n}\n\nexport default BrandModal\n","import React, { useState, useEffect } from 'react'\nimport BrandService from '../../Services/BrandService';\nimport './brandlist.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\nimport { Tooltip, OverlayTrigger } from 'react-bootstrap';\nimport BrandModal from '../Brand/BrandModal'\nimport Loader from 'react-loader-spinner';\n\n\nfunction BrandList({ show, setShow }) {\n\n    const brandService = new BrandService();\n\n    const [brand, setBrand] = useState([]);\n    const [brandFetched, isBrandFetched] = useState(false);\n    const [userHasWritePermission, setUserPermission] = useState(true);\n\n    const [updatedBrand, setUpdatedBrand] = useState([]);\n\n    useEffect(() => {\n        brandService.findAllBrand()\n            .then(res => {\n                setBrand(res);\n                setTimeout(()=> isBrandFetched(true),1000);\n            }\n            )\n    }, []);\n    //isBrandFetched(false);\n    // useEffect(() => {\n    //     userService.userHasWritePermission()\n    //         .then(res => setUserPermission(res))\n    // }, []);\n\n    function deleteBrandToolTip(props) {\n        return (\n            <Tooltip id=\"button-tooltip\" {...props}>\n                Delete brand\n            </Tooltip>\n        );\n    }\n\n    function updateBrandToolTip(props) {\n        return (\n            <Tooltip id=\"button-tooltip\" {...props}>\n                Update brand\n            </Tooltip>\n        );\n    }\n\n    function deleteBrand(brand) {\n        brandService.deleteBrand(brand);\n    }\n\n    function updateBrand(brand) {\n        setUpdatedBrand(brand);\n        setShow(true);\n    }\n\n    return (\n        <React.Fragment>\n            <div className=\"row mt-2\">\n                {!brandFetched ?\n                    <div className=\"col-12 text-center pt-5\"><Loader type=\"TailSpin\" color=\"#0056b3\" height={80} width={80} /></div>\n                    : brand.map((brand) =>\n                        <div className=\"col-12 col-md-6 col-lg-4 col-xl-3 mb-2\" key={brand.id}>\n                            <div className=\"card brand-card\">\n                                <img className=\"card-img-top w-100\" src=\"https://www.speedsecuregcc.com/uploads/products/default.jpg\" alt=\"Brand image\" />\n                                <div className=\"card-body\">\n                                    <p className=\"card-text mb-1\">Brand :\n                                    <span className=\"text-primary text-bold text-uppercase font-weight-bold\"> {brand.brand} </span>\n                                    </p>\n                                    <div className=\"position-relative\">\n                                        <div className=\"position-absolute delete-button d-inline-block cp delete-btn-position rounded-circle\" onClick={() => deleteBrand(brand)}>\n                                            <OverlayTrigger\n                                                placement=\"left\"\n                                                delay={{ show: 10, hide: 10 }}\n                                                overlay={deleteBrandToolTip}\n                                            >\n                                                <div className=\"icon-center\">  <FontAwesomeIcon icon={faTrash} size=\"xs\" /> </div>\n                                            </OverlayTrigger>\n                                        </div>\n                                        <div className=\"position-absolute update-button d-inline-block cp update-btn-position rounded-circle\" onClick={() => updateBrand(brand)}>\n                                            <OverlayTrigger\n                                                placement=\"left\"\n                                                delay={{ show: 10, hide: 10 }}\n                                                overlay={updateBrandToolTip}\n                                            >\n                                                <div className=\"icon-center\">  <FontAwesomeIcon icon={faEdit} size=\"xs\" /> </div>\n                                            </OverlayTrigger>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    )}\n            </div>\n            <BrandModal updatedBrand={updatedBrand} />\n        </React.Fragment>\n    )\n}\n\nexport default BrandList;","import React,{useState,useEffect} from 'react'\nimport {Button,Modal,Form,OverlayTrigger,Tooltip} from 'react-bootstrap'\nimport BrandService from '../../Services/BrandService';\nimport BrandList from './BrandList'\nimport './brand.css';\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\nimport {faPlus} from '@fortawesome/free-solid-svg-icons';\nimport {BrowserRouter as Router,Route,Switch} from 'react-router-dom'\nimport BrandModal from '../Brand/BrandModal'\n\n\nfunction Brand() {\n\n    const brandService = new BrandService();\n\n    const [show,setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    \n    // const [brand,setBrand] = useState([]);\n\n\n    /* useEffect(() => {\n        brandService.findAllBrand()\n            .then(res => {\n                setBrand(res)\n                console.log(brand,'brand')\n            })\n    },[]);\n */\n    function addBrandTooltip(props) {\n        return (\n            <Tooltip id=\"button-tooltip\" {...props}>\n                Add brand\n            </Tooltip>\n        );\n    }\n\n    return (\n        <div className=\"p-2\">\n            <div className=\"row\">\n                <div className=\"col-12 col-sm-8 mb-2 mb-sm-0\" > <h4>Brand</h4> </div>    \n                <div className=\"col-12 col-sm-4 mb-2 mb-sm-0 text-right\">\n                    <div className=\"rounded-circle wd-35 ht-35 text-white ml-auto position-relative add-bx cp\" onClick={handleShow}>\n                        <span className=\"position-absolute add-button\">\n                            <OverlayTrigger\n                                placement=\"left\"\n                                delay={{show: 250,hide: 400}}\n                                overlay={addBrandTooltip}\n                            >\n                                <FontAwesomeIcon icon={faPlus} />\n                            </OverlayTrigger>\n                        </span>\n                    </div>\n                </div>\n            </div>\n            <BrandList show={show} setShow={setShow}/>\n           \n            <BrandModal show={show} setShow={setShow}/>\n        </div>\n    )\n}\n\nexport default Brand\n\n","import React, { Component } from 'react'\nimport BrandService from '../../Services/BrandService'\n\nexport class Dashboard extends Component {\n\n    constructor(){\n        super();\n        this.setState({\n\n        });\n        this.brandService = new BrandService();\n        this.brandService.findAllBrand();\n    }\n\n   componentDidMount(){\n       console.log(process.env.REACT_APP_API_BASE_URL);\n   }\n\n    render() {\n        return (\n            <div style={{padding:10}}>\n                <h4 >Dashboard</h4>\n            </div>\n        )\n    }\n}\n\nexport default Dashboard\n","import React from 'react'\n\nclass LoginService extends React.Component {\n\n    constructor() {\n        super()\n    }\n\n    getLoginTokenKey = () => {\n        return 'jwt';\n    }\n\n    requestToLoginUser = (userObj) => {\n        //TODO : Update this logic and get token from backend\n        if(userObj!=null && userObj['password']=='admin' && userObj['email']=='admin@gmail.com'){\n            this.onLoginSuccess();\n            return Promise.resolve(\"Logged in succesful\");\n        }else{\n            return Promise.reject(\"Logged in failed, Enter valid credentials\");\n        }\n    }\n\n    onLoginSuccess = () => {\n        localStorage.setItem(this.getLoginTokenKey(), 'IMS-User');\n    }\n\n    isUserLoggedIn = () => {\n        if (localStorage.getItem(this.getLoginTokenKey())) {\n            return true;\n        }\n        return false;\n    }\n}\n\nexport default LoginService;","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport LoginService from '../Services/LoginService';\n\nvar loginService = new LoginService()\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n        <Route {...rest} render={props => (\n            loginService.isUserLoggedIn() ?\n                <Component {...props} />\n            : <Redirect to=\"/login\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;","import React, { useState } from \"react\";\nimport { Button, FormGroup, FormControl } from \"react-bootstrap\";\nimport \"./Login.css\";\nimport LoginService from \"../../Services/LoginService\";\n\n\nexport default function Login() {\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  var loginService  = new LoginService();\n\n  function validateForm() {\n    return email.length > 0 && password.length > 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    let userObj = {\n      email : email,\n      password : password\n    }\n    loginService.requestToLoginUser(userObj)\n    .then(loggedIn => {window.location.href = \"/\"})\n    .catch(msg =>  alert(msg));\n\n  }\n\n  return (\n    <div className=\"Login\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n        Email\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={email}\n            onChange={e => setEmail(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n        Password\n          <FormControl\n            value={password}\n            onChange={e => setPassword(e.target.value)}\n            type=\"password\"\n          />\n        </FormGroup>\n        <Button block bsSize=\"large\" disabled={!validateForm()} type=\"submit\">\n          Login\n        </Button>\n      </form>\n    </div>\n  );\n}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport LoginService from '../Services/LoginService';\n\nvar loginService = new LoginService()\n\nconst PublicRoute = ({component: Component, restricted, ...rest}) => {\n    return (\n        <Route {...rest} render={props => (\n            loginService.isUserLoggedIn() && restricted ?\n                <Redirect to=\"/\" />\n            : <Component {...props} />\n        )} />\n    );\n};\n\nexport default PublicRoute;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport Sidebar from './Components/Sidebar/Sidebar';\nimport Product from './Components/Product/Product';\nimport Topbar from './Components/Topbar/Topbar';\nimport Brand from './Components/Brand/Brand.jsx';\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport PrivateRoute from './Router/PrivateRoute';\nimport Login from './Components/Login/Login';\nimport PublicRoute from './Router/PublicRoute';\nimport LoginService from './Services/LoginService';\nimport UrlUtils from './Utils/UrlUtils';\n\nconst loginService = new LoginService();\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <Router>\n          {loginService.isUserLoggedIn() ?\n            <React.Fragment>\n              <div className=\"col-12 bg-dark\">\n                <Topbar />\n              </div>\n              <div className=\"col-md-2 bg-dark p-0\">\n                <Sidebar />\n              </div>\n            </React.Fragment> : null}\n          <div className=\"col-md-10\">\n            <Switch>\n              <PrivateRoute restricted={false} path=\"/\" exact component={Dashboard} />\n              <PrivateRoute restricted={false} path=\"/product\" exact component={Product} />\n              <PrivateRoute restricted={false} path=\"/brand\" exact component={Brand} />\n              <PublicRoute restricted={true} component={Login} path=\"/login\" exact />\n            </Switch>\n          </div>\n        </Router>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n// var express= require('express');\n// var app=express();\n// var cors = require('cors')\n\n// app.use(cors()) // Use this after the variable declaration\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}